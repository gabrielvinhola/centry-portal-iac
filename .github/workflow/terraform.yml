name: terraform

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '/.github/CODEOWNERS'
      - '.editorconfig'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - '.tflint.hcl'
      - 'CHANGELOG.md'



  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '/.github/CODEOWNERS'
      - '.editorconfig'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - '.tflint.hcl'
      - 'CHANGELOG.md'

permissions:
  id-token: write
  contents: write
  packages: write
  actions: read
  security-events: write
  pull-requests: write

jobs:


  plan:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dev
    env:
      TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}

    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: "1.7.3"
      #     cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      # - name: Terraform version
      #   id: version
      #   shell: bash
      #   run: terraform version

      - name: Terraform Init
        shell: bash
        run: terraform init -no-color
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}

      - name: Terraform Validate
        id: validate
        shell: bash
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          set -o pipefail; terraform plan --var-file="./environments/${{ matrix.environment }}.tfvars" \
          -out="${{ matrix.environment }}.plan" \
          -no-color | egrep -v 'password|other_sensitive_attribute'

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Plan status')
            })

            const output = `Plan status: \`${{ steps.plan.outcome }}\`
            <details>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.environment }}-plan
          path: ${{ matrix.environment }}.plan
          retention-days: 30

  