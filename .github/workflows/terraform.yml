name: terraform

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '/.github/CODEOWNERS'
      - '.editorconfig'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - '.tflint.hcl'
      - 'CHANGELOG.md'



  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '/.github/CODEOWNERS'
      - '.editorconfig'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - '.tflint.hcl'
      - 'CHANGELOG.md'

permissions:
  id-token: write
  contents: write
  packages: write
  actions: read
  security-events: write
  pull-requests: write

jobs:


  plan:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dev
    env:
      TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}

    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.8.5"
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      - name: Terraform version
        id: version
        shell: bash
        run: terraform version

      - name: Terraform Init
        id: init
        shell: bash
        run: terraform init -no-color
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}

      - name: Terraform Validate
        id: validate
        shell: bash
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan --var-file="./environments/${{ matrix.environment }}.tfvars" \
          -out="${{ matrix.environment }}.plan" \
          -input=false \
          -no-color

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.environment }}-plan
          path: ${{ matrix.environment }}.plan
          retention-days: 30

  apply:
    if: github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dev  
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
    environment: ${{ matrix.environment }}
    steps:
        - uses: actions/checkout@v3

        - uses: actions/download-artifact@v3
          with:
            name: ${{ matrix.environment }}-plan

        - name: Azure Login
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.ARM_CLIENT_ID }}
            tenant-id: ${{ secrets.ARM_TENANT_ID }}
            subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: '1.8.5'
            cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

        - name: Terraform Init
          shell: bash
          run:
            terraform init -no-color
          env:
            TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
            
        - name: Terraform Apply
          id: apply
          run: |
            terraform apply -no-color \
              -compact-warnings \
              -auto-approve \
              ${{ matrix.environment }}.plan
          continue-on-error: false
